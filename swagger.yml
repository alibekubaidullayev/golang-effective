openapi: 3.0.3
info:
  title: API Documentation
  description: API endpoints for managing users and tasks
  version: 1.0.0
paths:
  /users:
    get:
      summary: Retrieve a list of users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"

  /users/{id}:
    get:
      summary: Retrieve a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        "404":
          description: User not found

    patch:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        "404":
          description: User not found

    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deleted
        "404":
          description: User not found

  /tasks:
    get:
      summary: Retrieve a list of tasks
      responses:
        "200":
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /tasks/{id}:
    get:
      summary: Retrieve a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Task found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found

    patch:
      summary: Update a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found

    delete:
      summary: Delete a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deleted
        "404":
          description: Task not found

  /tasks/assign:
    post:
      summary: Assign a user to a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskUser"
      responses:
        "201":
          description: Assigned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskUser"
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /tasks/end:
    post:
      summary: End a task by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Task ended successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
        "500":
          description: Internal server error

  /tasks/calculate:
    get:
      summary: Calculate total payment for a user's tasks
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Total payment calculated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_payment:
                    type: number
        "500":
          description: Internal server error

components:
  schemas:
    Person:
      type: object
      properties:
        ID:
          type: integer
        PassNumber:
          type: string
        Surname:
          type: string
        Name:
          type: string
        Patronymic:
          type: string
        Address:
          type: string
        CreatedAt:
          type: string
          format: date-time
        UpdatedAt:
          type: string
          format: date-time

    Task:
      type: object
      properties:
        ID:
          type: integer
        Title:
          type: string
        Description:
          type: string
        Status:
          type: string
        CreatedAt:
          type: string
          format: date-time
        UpdatedAt:
          type: string
          format: date-time
        DueDate:
          type: string
          format: date-time
        CompletedAt:
          type: string
          format: date-time

    TaskUser:
      type: object
      properties:
        ID:
          type: integer
        TaskID:
          type: integer
        UserID:
          type: integer
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        PaymentRate:
          type: number
